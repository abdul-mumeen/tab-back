{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "16-04-2019 15:04:36"
}
{
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "16-04-2019 15:04:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "16-04-2019 15:04:68"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:04:92"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:04:48"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:29:42"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:32:07"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: column.type.toLowerString is not a function",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:33:23"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: option is not defined",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:37:54"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: option is not defined",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:39:07"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "level": "error",
    "message": "Controller Level error :: option is not definedoption is not defined",
    "stack": "ReferenceError: option is not defined\n    at Object.keys.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:70:13)\n    at Array.forEach (<anonymous>)\n    at mergeColumnOptions (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:69:29)\n    at data.fields.columns.columns.map (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:101:26)\n    at Array.map (<anonymous>)\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:94:35)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:41:29"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'textType' of undefined",
    "stack": "TypeError: Cannot read property 'textType' of undefined\n    at Object.keys.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:70:24)\n    at Array.forEach (<anonymous>)\n    at mergeColumnOptions (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:69:29)\n    at data.fields.columns.columns.map (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:101:26)\n    at Array.map (<anonymous>)\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:94:35)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:44:04"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "level": "error",
    "message": "Controller Level errorknex is not defined",
    "stack": "ReferenceError: knex is not defined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:111:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:107:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:45:48"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:46:44"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "level": "error",
    "message": "Controller Level errorerr is not defined",
    "stack": "ReferenceError: err is not defined\n    at DerivedLogger.logger.err.args [as err] (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/logger.js:27:16)\n    at createTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:194:16)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at knex.schema.hasTable.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:115:24)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:48:48"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "level": "error",
    "message": "columnPrimaryKey is not a function",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:52:27"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "level": "error",
    "message": "column is not defined",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:53:28"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:12:24"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "code": "ER_WRONG_AUTO_KEY",
    "level": "error",
    "message": "create table `blog_posts` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint unsigned not null auto_increment primary key, `tessellation_created_by` varchar(255)) - ER_WRONG_AUTO_KEY: Incorrect table definition; there can be only one auto column and it must be defined as a key",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:19:09"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blog_posts` add constraint `blog_posts_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blog_posts_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:19:11"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:19:11"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:22:10"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:23:14"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:23:49"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blog_ss` add constraint `blog_ss_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blog_ss_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:27:58"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogsas` add constraint `blogsas_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogsas_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "message": "Dropped table blogsas after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogsas` add constraint `blogsas_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogsas_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "message": "Dropped table blogsas after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "message": "Dropped table blog_users after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:34:11"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "sql": "drop table if exists `blog_users`",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "message": "Dropped table \"blog_users\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:35:55"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "create table `blog_users` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "alter table `blog_users` add primary key `blog_users_pkey`(`id`)",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "drop table if exists `blog_users`",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "message": "Dropped table \"blog_users\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:39:13"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "sql": "create table `blog_users` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "sql": "alter table `blog_users` add unique `blog_users_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:39:19"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:47:52"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "sql": "create table `blog_uses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "sql": "drop table if exists `blog_uses`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "level": "error",
    "message": "result is not defined",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "message": "Dropped table \"blog_uses\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:48:33"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "sql": "create table `blog_uses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "sql": "alter table `blog_uses` add unique `blog_uses_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogpost_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 04:30:35"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "code": "ER_KEY_COLUMN_DOES_NOT_EXITS",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - ER_KEY_COLUMN_DOES_NOT_EXITS: Key column 'author' doesn't exist in table",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 04:31:39"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogpost_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:15:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'name' of undefined",
    "stack": "TypeError: Cannot read property 'name' of undefined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:60:38)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:55:16)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:56:9)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:37:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:69:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:112:3)",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:16:16"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:25:24"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:27:23"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:27:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:28:28"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:33:42"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('pass', 33) - ER_DUP_ENTRY: Duplicate entry '33' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:36:26"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('pass', 33) - ER_DUP_ENTRY: Duplicate entry '33' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`a,d`, `password`, `username`) values (33, 'pass', 33) - ER_BAD_FIELD_ERROR: Unknown column 'a,d' in 'field list'",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:39:47"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`a,d`, `password`, `username`) values (33, 'pass', 33) - ER_BAD_FIELD_ERROR: Unknown column 'a,d' in 'field list'",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:45:00"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:45:34"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:46:02"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:49:10"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:55:01"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 313399113) - ER_DUP_ENTRY: Duplicate entry '313399113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:57:51"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 31339907113) - ER_DUP_ENTRY: Duplicate entry '31339907113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:58:44"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 339907113) - ER_DUP_ENTRY: Duplicate entry '339907113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:59:46"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:01:46"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 3399071187) - ER_DUP_ENTRY: Duplicate entry '3399071187' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:02:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8887) - ER_DUP_ENTRY: Duplicate entry '8887' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:04:02"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 888776) - ER_DUP_ENTRY: Duplicate entry '888776' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:04:37"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:12:43"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:14:51"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8275276) - ER_DUP_ENTRY: Duplicate entry '8275276' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:16:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:16:33"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8275296) - ER_DUP_ENTRY: Duplicate entry '8275296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:17:33"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 827785296) - ER_DUP_ENTRY: Duplicate entry '827785296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:18:15"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 829085296) - ER_DUP_ENTRY: Duplicate entry '829085296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:19:07"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:19:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 828296) - ER_DUP_ENTRY: Duplicate entry '828296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `password`) values (828296, 'spass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:22:11"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8282986) - ER_DUP_ENTRY: Duplicate entry '8282986' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "level": "error",
    "message": "Controller Level errorapply is not defined",
    "stack": "ReferenceError: apply is not defined\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:243:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:127:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)\n    at Parser.write (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Parser.js:76:12)\n    at Protocol.write (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:91:28)\n    at Socket.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:27:15"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "level": "error",
    "message": "Controller Level errorknex is not defined",
    "stack": "ReferenceError: knex is not defined\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:222:9\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/apply.js:11:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:16:14)\n    at exports.default (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:26:5)\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:247:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:129:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:28:52"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:30:17"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'naruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'naruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:31:51"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'naruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'naruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'nruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'nruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:32:42"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'nruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'nruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'ruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'ruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:33:45"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:34:52"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:35:47"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:37:39"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:38:13"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:40:28"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:41:56"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:42:49"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:45:38"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "level": "error",
    "message": "Controller Level errortessellationData is not defined",
    "stack": "ReferenceError: tessellationData is not defined\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:225:21\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/apply.js:11:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:16:14)\n    at exports.default (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:26:5)\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:253:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:130:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:46:04"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:48:08"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:48:10"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:48:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:50:15"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:51:33"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:52:29"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:08:26"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:10:56"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:11:21"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:12:03"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:14:06"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "sql": "create table `blog_suses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "sql": "alter table `blog_suses` add unique `blog_suses_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:19:15"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:21:40"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:22:20"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:23:08"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:23:31"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:18"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:29:18"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:29:30"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:29:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:30:19"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:30:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:31:46"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:31:49"
}
