{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "16-04-2019 15:04:36"
}
{
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "16-04-2019 15:04:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "16-04-2019 15:04:68"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:04:92"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:04:48"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:29:42"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error",
    "timestamp": "20-04-2019 01:29:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:32:07"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: column.type.toLowerString is not a function",
    "timestamp": "20-04-2019 01:32:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:33:23"
}
{
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: option is not defined",
    "timestamp": "20-04-2019 01:33:34"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:37:54"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "error": {},
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "error",
    "message": "Controller Level error :: option is not defined",
    "timestamp": "20-04-2019 01:38:07"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:39:07"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "level": "error",
    "message": "Controller Level error :: option is not definedoption is not defined",
    "stack": "ReferenceError: option is not defined\n    at Object.keys.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:70:13)\n    at Array.forEach (<anonymous>)\n    at mergeColumnOptions (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:69:29)\n    at data.fields.columns.columns.map (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:101:26)\n    at Array.map (<anonymous>)\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:94:35)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:39:12"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:41:29"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'textType' of undefined",
    "stack": "TypeError: Cannot read property 'textType' of undefined\n    at Object.keys.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:70:24)\n    at Array.forEach (<anonymous>)\n    at mergeColumnOptions (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/table.js:69:29)\n    at data.fields.columns.columns.map (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:101:26)\n    at Array.map (<anonymous>)\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:94:35)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:41:37"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:44:04"
}
{
    "0": "/",
    "1": "a",
    "2": "p",
    "3": "i",
    "4": "/",
    "5": "v",
    "6": "1",
    "7": "/",
    "8": "t",
    "9": "a",
    "10": "b",
    "11": "l",
    "12": "e",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "level": "error",
    "message": "Controller Level errorknex is not defined",
    "stack": "ReferenceError: knex is not defined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:111:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatColumn (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:107:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateColumns (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:88:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at validateTableName (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:70:12)",
    "timestamp": "20-04-2019 01:44:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:45:48"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:46:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:46:44"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:47:02"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "level": "error",
    "message": "Controller Level errorerr is not defined",
    "stack": "ReferenceError: err is not defined\n    at DerivedLogger.logger.err.args [as err] (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/logger.js:27:16)\n    at createTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:194:16)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at knex.schema.hasTable.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:115:24)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)",
    "timestamp": "20-04-2019 01:47:16"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:48:48"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "level": "error",
    "message": "columnPrimaryKey is not a function",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:48:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:52:27"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "level": "error",
    "message": "column is not defined",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:52:34"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 01:53:28"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 01:53:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:12:24"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "code": "ER_WRONG_AUTO_KEY",
    "level": "error",
    "message": "create table `blog_posts` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint unsigned not null auto_increment primary key, `tessellation_created_by` varchar(255)) - ER_WRONG_AUTO_KEY: Incorrect table definition; there can be only one auto column and it must be defined as a key",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:12:38"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:19:09"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:10"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blog_posts` add constraint `blog_posts_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blog_posts_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:19:11"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:19:11"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:19:46"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:22:10"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:22:15"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:22:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:23:14"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:16"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:23:49"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:51"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blog_ss` add constraint `blog_ss_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blog_ss_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:23:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:27:58"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogsas` add constraint `blogsas_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogsas_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "message": "Dropped table blogsas after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:28:03"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogsas` add constraint `blogsas_author_foreign` foreign key (`author`) references `users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogsas_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "message": "Dropped table blogsas after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:28:24"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:32:10"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "message": "Dropped table blog_users after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:32:16"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:34:11"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "sql": "drop table if exists `blog_users`",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "message": "Dropped table \"blog_users\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:34:18"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:35:55"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "create table `blog_users` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "alter table `blog_users` add primary key `blog_users_pkey`(`id`)",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "sql": "drop table if exists `blog_users`",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "code": "ER_MULTIPLE_PRI_KEY",
    "level": "error",
    "message": "alter table `blog_users` add primary key `blog_users_pkey`(`id`) - ER_MULTIPLE_PRI_KEY: Multiple primary key defined",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "message": "Dropped table \"blog_users\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:36:03"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:39:13"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "sql": "create table `blog_users` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "sql": "alter table `blog_users` add unique `blog_users_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Runnning query",
    "timestamp": "20-04-2019 02:39:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:39:19"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:40:36"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:47:52"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "sql": "create table `blog_uses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "sql": "drop table if exists `blog_uses`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "level": "error",
    "message": "result is not defined",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "message": "Dropped table \"blog_uses\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 02:47:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 02:48:33"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "sql": "create table `blog_uses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "sql": "alter table `blog_uses` add unique `blog_uses_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 02:48:37"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:26:43"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogpost_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:26:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 04:30:35"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:39"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "code": "ER_KEY_COLUMN_DOES_NOT_EXITS",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - ER_KEY_COLUMN_DOES_NOT_EXITS: Key column 'author' doesn't exist in table",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:30:40"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 04:31:39"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "sql": "drop table if exists `blogpost`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "code": "UNKNOWN_CODE_PLEASE_REPORT",
    "level": "error",
    "message": "alter table `blogpost` add constraint `blogpost_author_foreign` foreign key (`author`) references `blog_users` (`id`) on delete CASCADE - UNKNOWN_CODE_PLEASE_REPORT: Referencing column 'author' and referenced column 'id' in foreign key constraint 'blogpost_author_foreign' are incompatible.",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "message": "Dropped table \"blogpost\" after unsuccessful creation",
    "level": "info",
    "timestamp": "20-04-2019 04:31:41"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:33:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 04:53:44"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:15:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'name' of undefined",
    "stack": "TypeError: Cannot read property 'name' of undefined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:60:38)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:55:16)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:56:9)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:37:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:69:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:112:3)",
    "timestamp": "20-04-2019 05:15:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:16:16"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:16:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:25:24"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:25:26"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:27:23"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:27:27"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:27:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:27:51"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:28:28"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `id`, `password`) values ('abc@gmail.com', 44, 'pass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:28:29"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:28:48"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:29:04"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:33:42"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:52"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('pass', 33) - ER_DUP_ENTRY: Duplicate entry '33' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:33:53"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:36:26"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:27"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('pass', 33) - ER_DUP_ENTRY: Duplicate entry '33' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:36:28"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:38:03"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`a,d`, `password`, `username`) values (33, 'pass', 33) - ER_BAD_FIELD_ERROR: Unknown column 'a,d' in 'field list'",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:38:27"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:39:47"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`a,d`, `password`, `username`) values (33, 'pass', 33) - ER_BAD_FIELD_ERROR: Unknown column 'a,d' in 'field list'",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:39:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:44:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:45:00"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:45:02"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:45:34"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:45:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:46:02"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:46:06"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:49:10"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:49:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:55:01"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 313399113) - ER_DUP_ENTRY: Duplicate entry '313399113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:55:03"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:55:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:57:51"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 31339907113) - ER_DUP_ENTRY: Duplicate entry '31339907113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:57:53"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:57:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:58:44"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 339907113) - ER_DUP_ENTRY: Duplicate entry '339907113' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:58:45"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:58:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 05:59:46"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 05:59:52"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:01:46"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 3399071187) - ER_DUP_ENTRY: Duplicate entry '3399071187' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:01:48"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:01:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:02:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8887) - ER_DUP_ENTRY: Duplicate entry '8887' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:02:37"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:02:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:04:02"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 888776) - ER_DUP_ENTRY: Duplicate entry '888776' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:05"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:04:37"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:04:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:12:43"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:12:49"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:13:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:14:51"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8275276) - ER_DUP_ENTRY: Duplicate entry '8275276' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:14:53"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:14:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:16:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:16:33"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8275296) - ER_DUP_ENTRY: Duplicate entry '8275296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:16:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:16:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:17:33"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 827785296) - ER_DUP_ENTRY: Duplicate entry '827785296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:17:36"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:17:43"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:18:15"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 829085296) - ER_DUP_ENTRY: Duplicate entry '829085296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:18:18"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:18:24"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:19:07"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:19:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 06:19:41"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:19:48"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 828296) - ER_DUP_ENTRY: Duplicate entry '828296' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:21:17"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "code": "ER_BAD_FIELD_ERROR",
    "level": "error",
    "message": "insert into `blog_users` (`email`, `password`) values (828296, 'spass') - ER_BAD_FIELD_ERROR: Unknown column 'email' in 'field list'",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 06:21:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:22:11"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:22:26"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit-60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:22:58"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:23:11"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_users` (`password`, `username`) values ('spass', 8282986) - ER_DUP_ENTRY: Duplicate entry '8282986' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:25:50"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:25:57"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:26:09"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "level": "error",
    "message": "Controller Level errorapply is not defined",
    "stack": "ReferenceError: apply is not defined\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:243:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:127:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)\n    at Parser.write (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Parser.js:76:12)\n    at Protocol.write (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:91:28)\n    at Socket.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)",
    "timestamp": "20-04-2019 12:26:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:27:15"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "level": "error",
    "message": "Controller Level errorknex is not defined",
    "stack": "ReferenceError: knex is not defined\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:222:9\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/apply.js:11:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:16:14)\n    at exports.default (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:26:5)\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:247:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:129:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)",
    "timestamp": "20-04-2019 12:27:20"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:28:52"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:28:54"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:12"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:30:17"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'killabee', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'killabee' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:30:19"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'naruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'naruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:30:25"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:31:51"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'naruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'naruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:31:55"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'nruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'nruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:32:42"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'nruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'nruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:46"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "update `blog_users` set `username` = 'ruto', `password` = 'spass' where `tessellation_id` = 39 - ER_DUP_ENTRY: Duplicate entry 'ruto' for key 'blog_users_username_unique'",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:32:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:33:45"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:34:00"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:34:51"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:34:52"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=60",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:35:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:35:47"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:35:57"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:11"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users?limit=100",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:33"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:36:43"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:37:39"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:37:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:38:13"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:38:15"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:40:28"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:40:30"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:41:50"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:41:56"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:41:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:42:49"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:42:51"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:45:38"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "level": "error",
    "message": "Controller Level errortessellationData is not defined",
    "stack": "ReferenceError: tessellationData is not defined\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:225:21\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/apply.js:11:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:16:14)\n    at exports.default (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:26:5)\n    at createRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:253:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at Query.db.query (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:130:16)\n    at Query.<anonymous> (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:502:10)\n    at Query._callback (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/Connection.js:468:16)\n    at Query.Sequence.end (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/mysql/lib/protocol/Protocol.js:278:23)",
    "timestamp": "20-04-2019 12:45:39"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:46:04"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:46:06"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:48:08"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:48:09"
}
{
    "level": "error",
    "message": "undefined is not a function",
    "timestamp": "20-04-2019 12:48:10"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:48:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:50:15"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:50:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:51:33"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:51:37"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 12:52:29"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:52:30"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "createRecords",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_users/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 12:52:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:08:26"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:10:56"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:10:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:11:21"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:22"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:11:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:12:03"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:12:04"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:12:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:14:06"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "sql": "create table `blog_suses` (`id` int unsigned not null auto_increment primary key, `username` varchar(255), `firstname` varchar(255), `lastname` varchar(255), `password` varchar(255), `age` int, `poster` varchar(255), `bio` text, `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "sql": "alter table `blog_suses` add unique `blog_suses_username_unique`(`username`)",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:14:20"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:19:15"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:19:19"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:21:40"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:21:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:22:20"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:22:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:23:08"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:10"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:23:31"
}
{
    "method": "GET",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/articles",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:32"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_users",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:23:41"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:17"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:18"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:29:18"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:29:30"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:29:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:29:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:30:19"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:30:22"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:30:23"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 13:31:46"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 13:31:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:01:50"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:03:08"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:03:08"
}
{
    "level": "error",
    "message": "Controller Level errorcallback is not a function",
    "stack": "TypeError: callback is not a function\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:59:18)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:33:13)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:32:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:69:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)\n    at async.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/middlewares/allow/admin.js:10:7)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at getAdmin (/Users/inumidunamao/projects/freelenace/tab-back/src/middlewares/allow/admin.js:21:10)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)",
    "timestamp": "20-04-2019 14:03:08"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:03:35"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:03:39"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:03:39"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:03:39"
}
{
    "level": "error",
    "message": "Controller Level errorres.status is not a function",
    "stack": "TypeError: res.status is not a function\n    at Object.error (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:48:20)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:303:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:59:18)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:33:13)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:32:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:69:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)",
    "timestamp": "20-04-2019 14:03:39"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:04:09"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:04:12"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:04:12"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:04:12"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:04:25"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:04:25"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:04:25"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:04:37"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:04:38"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:04:38"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:04:38"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:04:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:04:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:04:49"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:04:58"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:04:58"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:04:58"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:05:08"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:05:08"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:05:08"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:05:17"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:05:17"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:05:17"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:05:32"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:05:32"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:05:32"
}
{
    "level": "error",
    "message": "Controller Level errorrequire(...)(...).then is not a function",
    "stack": "TypeError: require(...)(...).then is not a function\n    at createConnection (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:92:6)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:76:16)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:56:9)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:32:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:69:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)\n    at async.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/middlewares/allow/admin.js:10:7)",
    "timestamp": "20-04-2019 14:05:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:12:36"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:12:39"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:12:39"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:12:39"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:13:05"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:13:05"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:13:05"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:13:08"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:13:09"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:13:09"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:13:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:16:24"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:16:27"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:16:27"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:16:27"
}
{
    "code": "ER_NOT_SUPPORTED_AUTH_MODE",
    "level": "error",
    "message": "ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client",
    "timestamp": "20-04-2019 14:16:27"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:16:27"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:16:53"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:16:53"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:16:53"
}
{
    "level": "error",
    "message": "Controller Level errorKnex: run\n$ npm install pg --save\nCannot find module 'pg'",
    "stack": "Error: Knex: run\n$ npm install pg --save\nCannot find module 'pg'\n    at Client_PG.initializeDriver (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/client.js:257:13)\n    at Client_PG.Client (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/client.js:84:10)\n    at new Client_PG (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/dialects/postgres/index.js:31:19)\n    at Knex (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/knex.js:57:42)\n    at createConnection (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:82:33)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at check (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:76:16)\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:56:9)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:32:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:55:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)",
    "timestamp": "20-04-2019 14:16:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:42:07"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:42:31"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:42:31"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:42:31"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:42:32"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:42:45"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:42:54"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:42:54"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:42:54"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:42:55"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:47:40"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:47:40"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:47:40"
}
{
    "code": "ER_NOT_SUPPORTED_AUTH_MODE",
    "level": "error",
    "message": "ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client",
    "timestamp": "20-04-2019 14:47:40"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:47:40"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:49:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:49:49"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:49:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:49:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 14:51:40"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 14:51:41"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:51:41"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 14:51:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 14:51:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:06:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:09:25"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:09:29"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:09:29"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:09:29"
}
{
    "code": "ER_NO_SUCH_TABLE",
    "level": "error",
    "message": "insert into `tessellation_connections` (`connection`, `connection_id`, `created_by`) values ({\"host\":\"127.0.0.1\",\"password\":\"password\",\"user\":\"joshua\",\"database\":\"tabby\",\"port\":3308}, '31', DEFAULT) - ER_NO_SUCH_TABLE: Table 'tabby.tessellation_connections' doesn't exist",
    "timestamp": "20-04-2019 15:09:29"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:09:29"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:10:04"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:10:06"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:10:06"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:10:06"
}
{
    "code": "23502",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, DEFAULT) - null value in column \"created_by\" violates not-null constraint",
    "timestamp": "20-04-2019 15:10:06"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:10:06"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:11:16"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:11:18"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:11:18"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:11:18"
}
{
    "code": "23502",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, DEFAULT) - null value in column \"created_by\" violates not-null constraint",
    "timestamp": "20-04-2019 15:11:18"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:11:18"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:12:03"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:03"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:03"
}
{
    "code": "23502",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, DEFAULT) - null value in column \"created_by\" violates not-null constraint",
    "timestamp": "20-04-2019 15:12:03"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:12:03"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:12:07"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:12:08"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:08"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:08"
}
{
    "code": "23502",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, DEFAULT) - null value in column \"created_by\" violates not-null constraint",
    "timestamp": "20-04-2019 15:12:09"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:12:09"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:12:29"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:12:33"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:33"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:12:33"
}
{
    "code": "23502",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, DEFAULT) - null value in column \"created_by\" violates not-null constraint",
    "timestamp": "20-04-2019 15:12:33"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:12:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:13:53"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:14:05"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:14:05"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:14:05"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:14:05"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:15:48"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:15:49"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:15:49"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:15:49"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:15:49"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:15:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:20:38"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:20:40"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:20:40"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:20:40"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:20:41"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:20:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:21:21"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "level": "error",
    "message": "fomartKnexError is not a function",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:21:22"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:21:37"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:21:38"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:21:38"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:21:38"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:21:38"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:21:38"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:24:12"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "level": "error",
    "message": "err is not defined",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:24:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:24:27"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:24:29"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:24:29"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:24:29"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 15:24:29"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:24:29"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 15:31:35"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:31:35"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:31:35"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:31:35"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:31:36"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:31:36"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:31:47"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:32:52"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:33:14"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:34:07"
}
{
    "message": [
        {
            "connection": {
                "host": "127.0.0.1",
                "password": "password",
                "user": "joshua",
                "database": "tabby",
                "port": 3308
            }
        }
    ],
    "level": "info",
    "timestamp": "20-04-2019 15:35:08"
}
{
    "message": [],
    "level": "info",
    "timestamp": "20-04-2019 15:35:15"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:36:24"
}
{
    "level": "error",
    "message": "No connection found for id 3143",
    "timestamp": "20-04-2019 15:36:26"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:49:08"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:49:13"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:50:43"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:50:45"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:51:26"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:51:28"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:53:47"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:55:16"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:55:19"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:56:43"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:56:46"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:57:47"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:57:49"
}
{
    "method": "POST",
    "name": "initWaterfall",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:57:49"
}
{
    "level": "error",
    "message": "Controller Level errorknex: Required configuration option 'client' is missing.",
    "stack": "Error: knex: Required configuration option 'client' is missing.\n    at new Client (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/client.js:74:11)\n    at Knex (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/knex/lib/knex.js:57:42)\n    at initWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:44:52)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:80:44)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:94:19\n    at Layer.handle [as handle_request] (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/router/route.js:137:13)\n    at async.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/middlewares/allow/admin.js:10:7)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at getAdmin (/Users/inumidunamao/projects/freelenace/tab-back/src/middlewares/allow/admin.js:21:10)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)",
    "timestamp": "20-04-2019 15:57:49"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "method": "POST",
    "name": "initWaterfall",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 15:58:37"
}
{
    "level": "error",
    "message": "No connection found for id 3143",
    "timestamp": "20-04-2019 15:58:57"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:00:26"
}
{
    "level": "error",
    "message": "No connection found for id 3143",
    "timestamp": "20-04-2019 16:00:27"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "initWaterfall",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:00:44"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:01:17"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "initWaterfall",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:01:20"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:17:27"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:17:31"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:17:31"
}
{
    "level": "error",
    "message": "Controller Level errorsheetdb.query is not a function",
    "stack": "TypeError: sheetdb.query is not a function\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:10:20)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:100:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:93:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:36)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)",
    "timestamp": "20-04-2019 16:17:31"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:17:31"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:18:59"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:19:01"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:19:01"
}
{
    "level": "error",
    "message": "Controller Level errorsheetdb.query is not a function",
    "stack": "TypeError: sheetdb.query is not a function\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:10:20)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:101:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:93:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:36)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)",
    "timestamp": "20-04-2019 16:19:01"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:19:01"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:21:58"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "level": "error",
    "message": "Controller Level errordb.query is not a function",
    "stack": "TypeError: db.query is not a function\n    at data.tableNames.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:40:16)\n    at Array.forEach (<anonymous>)\n    at fetchTableInfo (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:38:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:85:36)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:22:00"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:22:16"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "level": "error",
    "message": "Controller Level errordb.query is not a function",
    "stack": "TypeError: db.query is not a function\n    at data.tableNames.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:40:16)\n    at Array.forEach (<anonymous>)\n    at fetchTableInfo (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:38:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:85:36)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:22:21"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:23:30"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "level": "error",
    "message": "Controller Level errordb.query is not a function",
    "stack": "TypeError: db.query is not a function\n    at data.tableNames.forEach (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:40:16)\n    at Array.forEach (<anonymous>)\n    at fetchTableInfo (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:38:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:85:36)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at formatResult (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:31:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:15:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:23:33"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:25:24"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:94:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:83:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:85:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:83:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:50:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:25:25"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:25:56"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:94:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:83:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:85:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:83:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:50:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:25:58"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:28:44"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:28:50"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:28:50"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'raw' of undefined",
    "stack": "TypeError: Cannot read property 'raw' of undefined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:10:20)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:100:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:93:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:36)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)",
    "timestamp": "20-04-2019 16:28:50"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 16:28:50"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:29:24"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:29:25"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:25"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:25"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:25"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:26"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'map' of undefined",
    "stack": "TypeError: Cannot read property 'map' of undefined\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:66:10)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:785:20)",
    "timestamp": "20-04-2019 16:29:26"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:29:26"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'map' of undefined",
    "stack": "TypeError: Cannot read property 'map' of undefined\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:66:10)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:81:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:785:20)",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:29:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:31:14"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:31:16"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:31:16"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:31:16"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:31:16"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:31:17"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'map' of undefined",
    "stack": "TypeError: Cannot read property 'map' of undefined\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:66:10)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:785:20)",
    "timestamp": "20-04-2019 16:31:17"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:31:17"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:32:02"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'map' of undefined",
    "stack": "TypeError: Cannot read property 'map' of undefined\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:67:10)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:49:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)\n    at _drainQueue (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:785:20)",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:32:04"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:32:43"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:93:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:86:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:49:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:32:46"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:33:39"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:93:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:86:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:49:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:33:41"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:35:02"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:93:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:86:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:82:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:49:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:35:07"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:35:24"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:92:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:86:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:35:25"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:36:43"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.ok (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:74:32)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:92:25)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "level": "error",
    "message": "Controller Level errorCallback was already called.",
    "stack": "Error: Callback was already called.\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:966:32\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:86:36)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:36:44"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:41:27"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "level": "error",
    "message": "Controller Level errorCan't set headers after they are sent.",
    "stack": "Error: Can't set headers after they are sent.\n    at validateHeader (_http_outgoing.js:489:11)\n    at ServerResponse.setHeader (_http_outgoing.js:496:3)\n    at ServerResponse.header (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:767:10)\n    at ServerResponse.send (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:170:12)\n    at ServerResponse.json (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/express/lib/response.js:267:15)\n    at Object.error (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/index.js:50:33)\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:112:37)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at async.waterfall.args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:105:32)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:41:35"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:45:52"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:45:53"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:45:53"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:45:53"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:45:53"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:45:53"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:48:24"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:48:36"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:48:38"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:48:38"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:48:38"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:48:38"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:48:39"
}
{
    "level": "error",
    "message": "Controller Level errorloggerOptions is not defined",
    "stack": "ReferenceError: loggerOptions is not defined\n    at done (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:112:21)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at async.waterfall.args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:104:32)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:473:16\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5329:29)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at parseTableInformation (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:81:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/all.js:48:32)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)",
    "timestamp": "20-04-2019 16:48:39"
}
{
    "level": "error",
    "timestamp": "20-04-2019 16:48:39"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:49:12"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:49:14"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:51:23"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:51:24"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:51:41"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:51:42"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:52:27"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:52:59"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:53:21"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:53:22"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:53:34"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:53:37"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 16:54:1313"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:54:1616"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 16:54:3636"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:3636"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:3737"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:54:3737"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:54:3737"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 16:54:3737"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 16:56:4343"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:56:4343"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'database' of undefined",
    "stack": "TypeError: Cannot read property 'database' of undefined\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:27:36)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:17:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:101:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:94:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at initWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:63:28)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19",
    "timestamp": "20-04-2019 16:56:4343"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 16:58:5757"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 16:58:5757"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'database' of undefined",
    "stack": "TypeError: Cannot read property 'database' of undefined\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:27:36)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/connect/controllers/connect.js:17:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:101:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:94:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at initWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:63:28)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19",
    "timestamp": "20-04-2019 16:58:5757"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:00:2727"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:00:2828"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:00:2828"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:00:2828"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:00:2828"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:01:1717"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:01:2121"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:01:2121"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:01:2121"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:01:2121"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:02:3535"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:02:3636"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:02:3636"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:02:3636"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:02:3636"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:04:1616"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:04:1717"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:04:1717"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:04:1717"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:04:1717"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:05:4444"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:05:5757"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:06:0101"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:06:0101"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:06:0101"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:06:0101"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:06:4949"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:06:5050"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:06:5050"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:06:5050"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:06:5050"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:08:3434"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:08:3939"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:08:3939"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:08:3939"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:08:3939"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:09:0606"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:09:0606"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:09:0606"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:09:4040"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:09:4040"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:09:4040"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:09:4040"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:09:4444"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:09:4545"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:09:4545"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:09:4545"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:09:4545"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:11:4343"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:11:4444"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:11:4444"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:11:4444"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:11:4444"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:12:4747"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:12:4848"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:12:4848"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:4848"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:12:4848"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:4848"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:12:5656"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:12:5656"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:5656"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "20-04-2019 17:12:5656"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:5656"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:12:5959"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:12:5959"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:5959"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:12:5959"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:14:2929"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:21:5454"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:21:5454"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'name' of undefined",
    "stack": "TypeError: Cannot read property 'name' of undefined\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:27:36)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/create.js:32:12)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:82:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:105:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:94:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then.args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:52:29)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)",
    "timestamp": "20-04-2019 17:21:5454"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:21:5454"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "sql": "create table `blogpost` (`id` int unsigned not null auto_increment primary key, `title` varchar(255), `author` int, `content` text, `poster` varchar(255), `rating` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "sql": "alter table `blogpost` add unique `blogpost_title_unique`(`title`)",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "20-04-2019 17:22:0707"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:22:0808"
}
{
    "method": "GET",
    "url": "/api/v1/table/blogpost",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 17:22:2727"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blogpost",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:22:2727"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'name' of undefined",
    "stack": "TypeError: Cannot read property 'name' of undefined\n    at findTable (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/one.js:7:51)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:84:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:103:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:96:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then.args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:54:29)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)",
    "timestamp": "20-04-2019 17:22:2727"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:22:2727"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:25:4141"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:4141"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'rows' of undefined",
    "stack": "TypeError: Cannot read property 'rows' of undefined\n    at module.exports (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/body-checker/index.js:27:36)\n    at checkBody (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/createRecord.js:13:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:84:55)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:66:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5334:5)\n    at createController (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:103:23)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at unfoldWaterfall (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:96:24)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then.args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:54:29)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)",
    "timestamp": "20-04-2019 17:25:4141"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:25:4141"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:25:4848"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_suses` (`password`, `tessellation_created_by`, `username`) values ('someone', 'nsknkcsncndnkdn', 'someting') - ER_DUP_ENTRY: Duplicate entry 'someting' for key 'blog_suses_username_unique'",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:25:5656"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_suses` (`password`, `tessellation_created_by`, `username`) values ('someone', 'nsknkcsncndnkdn', 'sometinee2g') - ER_DUP_ENTRY: Duplicate entry 'sometinee2g' for key 'blog_suses_username_unique'",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:26:0808"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:33:1010"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 17:33:2222"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:33:2222"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:33:2222"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:33:2222"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:33:2222"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:34:3636"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:34:3737"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses?limit=20",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:39:0303"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:39:0909"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "level": "error",
    "message": "Controller Level errorCannot read property 'uuid' of undefined",
    "stack": "TypeError: Cannot read property 'uuid' of undefined\n    at /Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:77:100\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/apply.js:11:19\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:16:14)\n    at exports.default (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/waterfall.js:26:5)\n    at updateRecords (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:101:5)\n    at args (/Users/inumidunamao/projects/freelenace/tab-back/src/utils/controller.js:84:55)\n    at nextTask (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5324:14)\n    at next (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:5331:9)\n    at /Users/inumidunamao/projects/freelenace/tab-back/node_modules/async/dist/async.js:969:16\n    at sheetdb.raw.then (/Users/inumidunamao/projects/freelenace/tab-back/src/services/table/controllers/updateRecord.js:62:20)\n    at tryCatcher (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/promise.js:694:18)\n    at _drainQueueStep (/Users/inumidunamao/projects/freelenace/tab-back/node_modules/bluebird/js/release/async.js:138:12)",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:39:1616"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:40:1010"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:40:1010"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:1010"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:1010"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:1111"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:1111"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:40:1616"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:1616"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:1616"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:1616"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:1616"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:40:4747"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:40:4949"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:4949"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:40:4949"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:4949"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:40:4949"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:45:1111"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "level": "error",
    "message": "Cannot read property 'sheetdb' of undefined",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:45:1212"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:45:5151"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "level": "error",
    "message": "sheetdb is not defined",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "level": "error",
    "message": "Callback was already called.",
    "timestamp": "20-04-2019 17:45:5252"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:46:2222"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:46:2323"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:46:2323"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:46:2323"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:46:2323"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:46:2424"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "20-04-2019 17:46:2424"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 17:46:5858"
}
{
    "method": "PUT",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [PUT]",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "method": "PUT",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "method": "PUT",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "method": "PUT",
    "name": "updateRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "method": "PUT",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "20-04-2019 17:47:0101"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 18:43:5959"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "20-04-2019 18:44:4747"
}
{
    "method": "POST",
    "url": "/api/v1/auth/authenticate",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "20-04-2019 18:44:4949"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/auth/authenticate",
    "level": "info",
    "message": "Running...",
    "timestamp": "20-04-2019 18:44:4949"
}
{
    "method": "POST",
    "name": "generateToken",
    "url": "/api/v1/auth/authenticate",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 18:44:4949"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/auth/authenticate",
    "level": "info",
    "message": "Done!",
    "timestamp": "20-04-2019 18:44:4949"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 03:28:0707"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "sql": "create table `Poles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "sql": "alter table `Poles` add unique `poles__unique`()",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "sql": "drop table if exists `Poles`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "code": "ER_PARSE_ERROR",
    "level": "error",
    "message": "alter table `Poles` add unique `poles__unique`() - ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "message": "Dropped table \"Poles\" after unsuccessful creation",
    "level": "info",
    "timestamp": "21-04-2019 03:28:4141"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "sql": "create table `Poles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "sql": "alter table `Poles` add unique `poles__unique`()",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "sql": "drop table if exists `Poles`",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "code": "ER_PARSE_ERROR",
    "level": "error",
    "message": "alter table `Poles` add unique `poles__unique`() - ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "message": "Dropped table \"Poles\" after unsuccessful creation",
    "level": "info",
    "timestamp": "21-04-2019 03:29:2222"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 03:33:5757"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "sql": "create table `Poles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 03:34:0303"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 12:55:5858"
}
{
    "PORT": 9000,
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 13:28:4444"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 13:51:4141"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 13:52:0101"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "level": "error",
    "message": "Unable to acquire a connection",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 13:52:2020"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 14:14:5252"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "sql": "create table `foles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 14:14:5656"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 14:16:3535"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 14:16:4040"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "level": "error",
    "message": "Unable to acquire a connection",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 14:16:4444"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "level": "error",
    "message": "Unable to acquire a connection",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 14:17:0202"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 14:17:1010"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "sql": "create table `fodles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "message": "destroying connection to data source",
    "level": "info",
    "timestamp": "21-04-2019 14:17:1616"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 14:18:3030"
}
{
    "method": "POST",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "validateTableName",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "validateColumns",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "formatColumn",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "generateQuery",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "createTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "sql": "create table `fodeles` (`id` int unsigned not null auto_increment primary key, `Name` text, `coordinates` float(8, 2), `tessellation_id` bigint, `tessellation_created_by` varchar(255))",
    "bindings": [],
    "level": "info",
    "message": "Running query",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:18:3434"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:18:5252"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:18:5252"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:18:5252"
}
{
    "code": "23505",
    "level": "error",
    "message": "insert into \"tessellation_connections\" (\"client\", \"connection\", \"connection_id\", \"created_by\") values ($1, $2, $3, $4) - duplicate key value violates unique constraint \"tessellation_connections_connection_id_unique\"",
    "timestamp": "21-04-2019 14:18:5353"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:18:5353"
}
{
    "method": "POST",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 14:19:0202"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:19:0202"
}
{
    "method": "POST",
    "name": "createConnection",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:19:0202"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/connect",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:19:0202"
}
{
    "method": "GET",
    "url": "/api/v1/table",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "method": "GET",
    "name": "formatResult",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "method": "GET",
    "name": "parseTableInformation",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 14:19:2121"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 15:52:1919"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_suses` (`password`, `tessellation_created_by`, `tessellation_id`, `username`) values ('someone', 'nsknkcsncndnkdn', 21, 'Kurosaki-sama') - ER_DUP_ENTRY: Duplicate entry 'Kurosaki-sama' for key 'blog_suses_username_unique'",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:52:4444"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 15:52:5555"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:5555"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:5555"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:5656"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:52:5656"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:52:5656"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:52:5656"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:53:5555"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 15:54:0808"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:54:1313"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 15:54:1414"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 22:23:2323"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:26:0404"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 22:28:1414"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "code": "ER_DUP_ENTRY",
    "level": "error",
    "message": "insert into `blog_suses` (`password`, `tessellation_created_by`, `username`) values ('someone', 'nsknkcsncndnkdn', 'Kurosaki-sama') - ER_DUP_ENTRY: Duplicate entry 'Kurosaki-sama' for key 'blog_suses_username_unique'",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:28:2525"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:28:3535"
}
{
    "PORT": "7000",
    "level": "info",
    "message": "Server started",
    "timestamp": "21-04-2019 22:31:1616"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:31:5353"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:0404"
}
{
    "method": "POST",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "START: [POST]",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "checkBody",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "getColumnInfo",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "removeRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "createRecords",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "POST",
    "name": "done",
    "url": "/api/v1/table/blog_suses/records",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:3131"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses?page=1",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:32:4747"
}
{
    "method": "GET",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "START: [GET]",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "findTable",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "fetchTableInfo",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "fetchColumnInfo",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "parseTableColumn",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Running...",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "fetchTableTows",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:33:0000"
}
{
    "method": "GET",
    "name": "done",
    "url": "/api/v1/table/blog_suses?page=0",
    "level": "info",
    "message": "Done!",
    "timestamp": "21-04-2019 22:33:0000"
}
